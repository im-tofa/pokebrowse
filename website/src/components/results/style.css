/*
    TODO: Use MUCH more simple design here.

    I think something like this should work:

    A result consists of a grid area with named 
    areas for EVs, IVs, moves, and so on. On mobile, 
    the structure is one way. On desktop, the structure
    is more expanded. No stackdivs, no inner grids, none 
    of that. Should be much more manageable.

    Also, each result should have an import button that 
    copies directly to clipboard, and/or a button for 
    reading more (including import). Either as 'popup'
    or as its own page.
*/

/* includes item icon */
.name {
    grid-area: name;
    font-size: medium;
    padding-left: 5px;
    border-bottom-style: solid;
    border-bottom-width: 1px;
    border-bottom-color: #aaaaaa;
}
.image {
    grid-area: image;
}
.img {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

.icon {
    position: absolute;
    bottom: 0;
    right: 0;
    width: 24px;
    height: 24px;
}
.author {
    grid-area: author;
    font-style: italic;
}
.rating {
    grid-area: rating;
}
.date {
    grid-area: date;
}
.ability {
    grid-area: ability;
}
.nature {
    grid-area: nature;
}
.evs {
    grid-area: evs;
}
.ivs {
    grid-area: ivs;
}
.moves {
    grid-area: moves;
}
.result {
    display: grid;
    font-size: small;
    grid-template-columns: 66px 1fr 1fr 2fr 1fr;
    grid-template-rows: auto 22px 22px 22px;
    grid-template-areas:
        "name  name   name    name name"
        "image author ability evs  moves"
        "image rating nature  ivs  moves"
        "image date   .       .    moves";

    align-items: center;
    background-color: #efefef;
    padding: 2px;
    border-radius: 5px;
}

.results {
    height: 100%;
    width: 100%;

    /* scroll and height */
    overflow-y: scroll;
}

.results ul {
    list-style-type: none;
    padding: 0;
    width: 100%;
    margin: 0;

    display: grid;
    gap: 10px;
}

/*

    TODO: This layout for mobile

    toptag
    icon <authorratingdate>   
    <abilitynature>             
    <evsivs>                    
    <moves>        
    
    And similar to original style for desktop.

    On click anywhere on a result (but with a button as well),
    bring up 

*/

.wrapper {
    display: block;
    position: relative;
    width: 100%;
    height: 100%;
}

.sticky {
    position: sticky;
    top: 0;
    background-color: #fefefe;
    z-index: 1;
}

@media (min-width: 700px) {
    .resultcols {
        display: grid;
        grid-template: 64px / 64px 150px 100px 250px 1fr;
    }

    .resultcols.sticky {
        grid-template-rows: 1fr;
    }
}
