/* TODO: Maybe add a sidebar that has "set of the day" or something, 
below results section when in mobile view; and don't have the set 
browser centered. And also don't have set-browser be a different color 
than background, or at least not too different, go for a more discrete 
look */
.setbrowser {
    display: flex;
    flex-direction: column;
    position: relative;
    top: 0;
    left: 0;
    padding: 5px 5px;
    width: 100%;
    /* overflow-y: hidden; */
    gap: 10px;
}

.setbrowser h2 {
    /*border-bottom-width: 1px;
	border-bottom-color: #535353;
	border-bottom-style: solid;*/
}

.results {
    /*display: flex;
	justify-content: flex-start;
	align-items: flex-start;
	flex-wrap: wrap;*/

    /*
	background: #fefefe;
	border-radius: 5px;
	border-width: 1px;
	border-color: #888888;
	border-style: solid;
	*/

    /* scroll and height */
    overflow-y: scroll;
}

.results ul {
    list-style-type: none;
    padding: 0;
    width: 100%;
    margin: 0;
}

.result {
    margin-bottom: 5px;
}

/* .toptag, .bottag {
	border-style: solid;
	border-radius: 1px;
	border-width: 1px;
	border-color: black;
} */

.wrapper {
    display: block;
    position: relative;
    width: 100%;
    height: 100%;
}

.toptag {
    display: inline-block;
    border-bottom: none;
    background-color: #efefef;
    width: 200px;
    height: 18px;
    padding-left: 5px;
    margin: 0;
}

.clip {
    /* enforce clipping of overflowing name for single lines */
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.abstract {
    position: relative;
    overflow: hidden;
    height: 100%;
}

.triangle_bottom_left {
    display: inline-block;
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 18px 0 0 18px;
    border-color: transparent transparent transparent #efefef;
}

.bottag {
    border-top: none;
    background-color: #eeeeee;
}

/* TODO: stacked content does not handle overflow */
.stackdivs {
    display: flex;
    flex-wrap: nowrap;
    flex-direction: column;
    justify-content: space-evenly;
    height: 100%;
}

.grid {
    display: grid;
    height: 100%;
}

.c1 {
    grid-template-columns: 1fr;
}

.c2 {
    grid-template-columns: 1fr 1fr;
}

.c6 {
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
}

.r1 {
    grid-template-rows: 1fr;
}

.r2 {
    grid-template-rows: 1fr 1fr;
}

.r5 {
    grid-template-rows: 1fr 1fr 1fr 1fr 1fr;
}

.grid > * {
    align-self: center;
    font-size: inherit;
}

.resultcols {
    display: grid;
    grid-template: 64px / 64px 150px 100px 200px 1fr 1fr;
}

.resultcols.sticky {
    grid-template-rows: 1fr;
}

.sticky {
    position: sticky;
    top: 0;
    background-color: #fefefe;
    z-index: 1;
}

.tight {
    font-size: small;
}

.resultcols > * {
    padding: 5px;
    align-self: center;
}

.icon {
    position: absolute;
    bottom: 0;
    right: 0;
    width: 24px;
    height: 24px;
}

.author {
    font-style: italic;
}

.typing {
    border-color: rgba(0, 0, 0, 0.1);
    border-style: solid;
    border-width: 1px;
    border-radius: 5px;
    margin-top: 5px;
    margin-bottom: 5px;
    padding: 2px;
}

/* types */
.ice {
    background-color: azure;
}

.dragon {
    background-color: rgb(0, 165, 165);
}

.grass {
    background-color: lightgreen;
}

/* 
	if these are put at the bottom, cascading in CSS will
	enforce the media queries when applicable! This is what 
	I want.
*/
@media only screen and (min-width: 700px) {
    .setbrowser {
        width: 700px;
    }
}
